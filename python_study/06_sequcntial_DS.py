"""
메모리 점유에 따른 자료구조 
  * 메모리 공간 기반의 연속 (Contiguous) 방식
  * 포인터 기반의 연결 (Link) 방식

추상 자료형 (ADT): 의 실제 구현 대부분은 배열 또는 Linked List를 활용
  * ex) 스택을 Linked list로 구현, 큐를 Array로 구현

배열: 선언 시, 크기를 지정하고 해당 크기만큼의 연속된 메모리 공간을 할당 받는 자료구조
  * 실제 물리 메모리에 연속적으로 크기만큼 공간 할당
  * 어느 위치에 조회해도 O(1) 성능으로 조회 가능
  * 자료형의 크기를 고정해 사용하는 것을 매우 불편함
    * -> 크기를 지정하지 않고 자동으로 Resizing하는 동적 배열 등작
    * JAVA: ArrayList, C++: std::vector, Python: List
    * 초기값을 작게 잡아 배열 생성 -> 데이터 꽉 찼는데 추가되는 경우 -> 큰 배열 생성 및 복사
"""

if __name__=="__main__":
    print("HELLO WORLD")
