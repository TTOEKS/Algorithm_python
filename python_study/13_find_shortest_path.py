"""
최단 경로 문제
각 간선의 가중치의 합이 최소가 되는 두 정점 (또는 노드) 사이의 경로를 찾는 문제
  * 예시로 내비게이션에서 목적지로 이동할 때 경로 탐색 시 최적의 경로를 안내해 주는 것
  * Vertex는 교차로, Edge는 길, Weight는 이동에 대한 비용에 해당 됨
  * 그래프 종류와 특성에 따라 최적화된 다양한 최단 경로 알고리즘이 존재함
  * 가장 유명한 최단 경로 알고리즘은 Dijkstra Algorithm 이 있음

다익스트라 알고리즘 (Dijkstra Algorithm)
  * 항상 노드 주변의 최단 경로만을 택하는 대표적인 그리디(Greed) 알고리즘
  * 노드 주변을 탐색할 때 BFS (너비우선탐색)을 사용하는 대표적인 알고리즘
  * DFS는 한사람이 미로를 찾아 헤매는 과정과 유사
  * BFS는 여러 명의 사람이 각기 서로 다른 갈림길로 흩어져 길을 탐색
  * 단, 가중치가 음수인 경우는 사용할 수 없음
  * 음수 가중치가 존재하는 경우 벨만-포드(Bellman-Ford Algorithm) 사용을 고려
  * 복잡도: 초기 -> O(V ^2) / PrirorityQueue와 함께 사용 -> O((V + E)log V) / 모든 정점이 출발지에서 도달 가능한 경우 -> O(E log V)
"""

def dijkstra_algorithm():
    pass

if __name__=="__main__":
    print("Hello world")
